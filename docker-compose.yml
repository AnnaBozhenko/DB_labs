version: '3.8'
# services:
#   app:
#     build: ./app/
#     depends_on:
#       - db
#     volumes:
#       - './app/data:/app/data'
#       - './app/program_output:/app/program_output'
#       - './app/flyway/sql:/app/flyway/sql'
#     networks:
#       - test
#   db:
#     image: postgres:13
#     restart: always
#     environment:
#       - POSTGRES_USER=Student
#       - POSTGRES_PASSWORD=qwerty
#       - POSTGRES_DB=ZNO
#     ports:
#       - '5432:5432'
#     networks:
#       - test
#   flyway:
#     image: flyway/flyway:7
#     depends_on:
#       - db
#     command: -configFiles=/flyway/conf/flyway.conf migrate
#     volumes:
#       - './app/flyway/conf:/flyway/conf'
#       - './app/flyway/sql:/flyway/sql'

#     networks:
#       - test

# networks:
#   test:

services:
    db:
        image: postgres:13
        restart: always
        environment:
            - POSTGRES_DB=ZNO
            - POSTGRES_USER=Student
            - POSTGRES_PASSWORD=qwerty
        ports:
            - 5432:5432/tcp
        command: -c max_wal_size=5GB
        networks:
            - test
    db_client:
        image: dpage/pgadmin4
        restart: always
        environment:
           - PGADMIN_DEFAULT_EMAIL=user@domain.com
           - PGADMIN_DEFAULT_PASSWORD=clientpass
        ports:
           - 5050:80
        networks:
            - test
# flyway container for magrating from existing database 
    flyway:
        image: flyway/flyway:7
        depends_on:
            - db
        volumes:
            - './app/flyway/migrate_existing/conf:/flyway/conf'
            - './app/flyway/migrate_existing/sql:/flyway/sql'
        command: 
            -c -configFiles=/flyway/conf/flyway.conf migrate
        networks:
            - test
    app:
        build: 
            context: ./app
            dockerfile: Dockerfile
        depends_on:
           - db
        volumes:
           - './app/data:/app/data'
           - './app/program_output:/app/program_output'
           - './app/flyway/migrate_existing/sql:/app/flyway/migrate_existing/sql'
        networks:
            - test
# flyway container for migrating from 0
    migrate:
            build:
                context: ./app
                dockerfile: migrate_existing.Dockerfile
            depends_on:
                - db
            volumes:
                - './app/program_output:/app/program_output'
            networks:
                - test


networks:
    test:
